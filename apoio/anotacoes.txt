    'DailyRate': np.random.randint(100, 1500, n_samples),
    'EmployeeCount': np.ones(n_samples, dtype=int),
    'EmployeeNumber': np.arange(1, n_samples + 1),
    'HourlyRate': np.random.randint(30, 100, n_samples),
    'MonthlyRate': np.random.randint(2000, 27000, n_samples),
    'NumCompaniesWorked': np.random.randint(0, 10, n_samples),
    'Over18': ['Y'] * n_samples,
    'StandardHours': [80] * n_samples,
    'TotalWorkingYears': np.random.randint(0, 40, n_samples),
    'YearsInCurrentRole': np.random.randint(0, 19, n_samples),
    'YearsSinceLastPromotion': np.random.randint(0, 16, n_samples),
    'YearsWithCurrManager': np.random.randint(0, 18, n_samples)


https://www.mackenzie.br/fileadmin/CONFIGURACOES/DEFAULT_21/Resources/Public/Template/img/logo/universidade_mack_v2.svg



df_processed['Attrition'] = df_processed['Attrition'].map({'Yes': 1, 'No': 0})

- **One-Hot Encoding**: Department,
                        EducationField, 
                        JobRole, 
                        MaritalStatus, 
                        Gender

- **Label Encoding**:   BusinessTravel, 
                        OverTime (binárias ordenadas)

- **Manter como numérica**: Education****,  
                            JobLevel (ordinais)



Features numéricas (1): ['PerformanceRating']...
Features categóricas (8): [ 'Gender', 'MaritalStatus', 'Education', 'EducationField',
                             'Department', 'JobRole', 'OverTime', 'BusinessTravel']


                             